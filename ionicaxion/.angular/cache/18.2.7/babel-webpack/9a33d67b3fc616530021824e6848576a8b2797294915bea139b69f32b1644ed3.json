{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/a.campos/source/repos/ionicaxion/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/api.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@angular/forms\";\n// Define la interfaz aquí\nexport let LoginPage = /*#__PURE__*/(() => {\n  var _LoginPage;\n  class LoginPage {\n    constructor(apiService, router,\n    // Inyecta Router\n    toastController // Inyecta ToastController\n    ) {\n      this.apiService = apiService;\n      this.router = router;\n      this.toastController = toastController;\n      this.phoneNumber = \"\";\n      this.password = \"\";\n    }\n    login() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const loginData = {\n          phoneNumber: _this.phoneNumber,\n          password: _this.password\n        };\n        console.log('LoginData from API:', loginData); // <-- Agregado aquí\n        console.log('Login Data:', JSON.stringify(loginData));\n        _this.apiService.login(loginData).subscribe( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (response) {\n            console.log('Response from API:', response);\n            if (response && response.message === 'Login successful.') {\n              // Almacena el nombre completo del usuario en localStorage\n              localStorage.setItem('fullName', response.fullName);\n              _this.router.navigate(['/home']); // Navega a la página home\n            } else {\n              // Muestra un toast con el error\n              const toast = yield _this.toastController.create({\n                message: response.message || 'Error al iniciar sesión',\n                duration: 2000,\n                color: 'danger'\n              });\n              toast.present();\n            }\n          });\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      })();\n    }\n  }\n  _LoginPage = LoginPage;\n  _LoginPage.ɵfac = function LoginPage_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || _LoginPage)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ToastController));\n  };\n  _LoginPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _LoginPage,\n    selectors: [[\"app-login\"]],\n    decls: 16,\n    vars: 2,\n    consts: [[3, \"ngSubmit\"], [\"position\", \"floating\"], [\"name\", \"phoneNumber\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"password\", \"type\", \"password\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"expand\", \"full\", \"type\", \"submit\"]],\n    template: function LoginPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n        i0.ɵɵtext(3, \"Login\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(4, \"ion-content\")(5, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginPage_Template_form_ngSubmit_5_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵelementStart(6, \"ion-item\")(7, \"ion-label\", 1);\n        i0.ɵɵtext(8, \"N\\u00FAmero de celular\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"ion-input\", 2);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginPage_Template_ion_input_ngModelChange_9_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.phoneNumber, $event) || (ctx.phoneNumber = $event);\n          return $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"ion-item\")(11, \"ion-label\", 1);\n        i0.ɵɵtext(12, \"Contrase\\u00F1a\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"ion-input\", 3);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginPage_Template_ion_input_ngModelChange_13_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.password, $event) || (ctx.password = $event);\n          return $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"ion-button\", 4);\n        i0.ɵɵtext(15, \"Iniciar Sesi\\u00F3n\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.phoneNumber);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.password);\n      }\n    },\n    dependencies: [i4.ɵNgNoValidate, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i3.IonButton, i3.IonContent, i3.IonHeader, i3.IonInput, i3.IonItem, i3.IonLabel, i3.IonTitle, i3.IonToolbar, i3.TextValueAccessor]\n  });\n  return LoginPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}